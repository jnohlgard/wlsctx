ARG JB_PRODUCTS_URL=https://data.services.jetbrains.com/products
ARG JB_CODE
ARG JB_RELEASE_TYPE=release
ARG JB_KEYS_SOURCE=download

FROM fedora AS base
RUN --mount=type=cache,id=dnf5-fedora,dst=/var/cache/libdnf5 \
  set -eufx; \
  dnf install -y --setopt=install_weak_deps=false \
    --setopt=keepcache=true \
    jq \
    curl \
    coreutils \
    ;

FROM scratch AS jb-product-desc
ARG JB_PRODUCTS_URL
ARG JB_CODE
ADD "${JB_PRODUCTS_URL}?code=${JB_CODE}&fields=code,name,productFamilyName,intellijProductCode,description" /product-desc.json

FROM scratch AS jb-latest-release
ARG JB_PRODUCTS_URL
ARG JB_CODE
ARG JB_RELEASE_TYPE
ADD "${JB_PRODUCTS_URL}/releases?code=${JB_CODE}&type=${JB_RELEASE_TYPE}&latest=true" /release.json

FROM base AS download
ARG TARGETOS
ARG TARGETARCH
WORKDIR /work
COPY --from=jb-product-desc /product-desc.json /product-desc.json
COPY --from=jb-latest-release /release.json /release.json
RUN --mount=type=cache,id=download-jb,dst=/download \
  set -eufx; \
  [ "${TARGETARCH}" == "arm64" ] && \
    plat="${TARGETOS}ARM64" || plat="${TARGETOS}"; \
  prod=$(jq -j '.[].name' /product-desc.json | \
    tr 'A-Z ' 'a-z-' | tr -cd 'a-z0-9+@_-') && \
  [ -n "${prod}" ]; \
  filename=$(jq -j --arg plat "${plat}" \
    '.[][].downloads[$plat].link / "/" | last' /release.json) && \
  [ -n "${filename}" ]; \
  sha256filename=$(jq -j --arg plat "${plat}" \
    '.[][].downloads[$plat].checksumLink / "/" | last' /release.json) && \
  [ -n "${sha256filename}" ]; \
  if [ -f "/download/${sha256filename}" ] &&  \
    [ -f "/download/${filename}" ] && \
    ( cd "/download" && sha256sum -c "./${sha256filename}" ); then \
    printf 'Already downloaded: %s\n' "${filename}"; \
  else \
    jq -r --arg plat "${plat}" \
      '.[][].downloads[$plat] | (.link, .checksumLink)' \
      /release.json | \
    curl --retry 5 --remove-on-error --remote-name-all -Lf --parallel --url @- && \
    sha256sum -c "./${sha256filename}" && \
    mv -t "/download/" "./${filename}" "./${sha256filename}"; \
  fi; \
  mkdir -p "/out/jetbrains/bin" "/out/${prod}" && \
  tar -C "/out/${prod}" --strip-components=1 -xf "/download/${filename}" && \
  launcher=$(jq -r '.launch[].launcherPath' "/out/${prod}/product-info.json") && \
  ln -svr "/out/${prod}/${launcher}" "/out/jetbrains/bin/" && \
  find "/out/${prod}/bin/" -maxdepth 1 -name '*.vmoptions' \
    -execdir sed -i -e '$a-Dawt.toolkit.name=WLToolkit' '{}' + && \
  :
FROM scratch AS extension
COPY --from=download /out/ /

FROM runtime AS app
COPY --link --from=ide-files / /opt/
ENV PATH=/opt/jetbrains/bin:${PATH}
